{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/UI/Card.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","hooks/use-http.js","lib/api.js","pages/AllQuotes.js","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetail.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","pages/NotFound.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","LoadingSpinner","spinner","NoQuotesFound","noquotes","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuotes","loadedQuotes","useEffect","length","HighlightedQuote","NewCommentForm","commentTextRef","useRef","onAddedComment","submitFormHandler","event","preventDefault","enteredText","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","CommentsList","comments","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","QuoteDetail","match","useRouteMatch","path","exact","url","Card","card","children","QuoteForm","isEntering","setIsEntering","authorInputRef","textInputRef","when","onFocus","enteredAuthor","onAddQuote","isLoading","loading","NewQuote","NotFound","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","App","ReactDOM","render","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,gBCArID,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,6BAA6B,IAAM,4BAA4B,OAAS,iC,iBCAzID,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,kC,mBCApJD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,iBCA3DD,EAAOC,QAAU,CAAC,KAAO,0B,kBCAzBD,EAAOC,QAAU,CAAC,QAAU,kC,gBCA5BD,EAAOC,QAAU,CAAC,SAAW,kC,gBCA7BD,EAAOC,QAAU,CAAC,MAAQ,kC,gBCA1BD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,KAAO,4B,gBCAzBD,EAAOC,QAAU,CAAC,SAAW,iC,gBCA7BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,uB,8ICmBVC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,iBCyCSC,EAtCG,SAACR,GACjB,IAXkBS,EAAQC,EAWpBC,EAAUC,cACVC,EAAWC,cAIXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAErCC,GAlBYV,EAkBcT,EAAMS,OAlBZC,EAkBoBK,EAjBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAsBxC,OACE,eAAC,WAAD,WACE,qBAAKN,UAAWC,IAAQqB,QAAxB,SACE,yBAAQC,QAVe,WAC3Bb,EAAQc,KAAK,CACXC,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAYF,EAAqB,OAAS,UAO9C,kBACQA,EAAqB,aAAe,iBAG9C,oBAAId,UAAWC,IAAQyB,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEtB,GAAIsB,EAAMtB,GACVF,OAAQwB,EAAMxB,OACdD,KAAMyB,EAAMzB,MAHPyB,EAAMtB,a,iBCrCRuB,EAJQ,WACrB,OAAO,qBAAK7B,UAAWC,IAAQ6B,W,iBCYlBC,EAXO,WACpB,OACE,sBAAK/B,UAAWC,IAAQ+B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMhC,UAAU,MAAMK,GAAG,aAAzB,6B,uCCNN,SAAS4B,EAAYC,EAAOC,GAC1B,MAAoB,SAAhBA,EAAOC,KACF,CACLC,KAAM,KACNC,MAAO,KACPC,OAAQ,WAIQ,YAAhBJ,EAAOC,KACF,CACLC,KAAMF,EAAOK,aACbF,MAAO,KACPC,OAAQ,aAIQ,UAAhBJ,EAAOC,KACF,CACLC,KAAM,KACNC,MAAOH,EAAOM,aACdF,OAAQ,aAILL,EAgCMQ,MA7Bf,SAAiBC,GAA4C,IAA3BC,EAA0B,wDAC1D,EAA8BC,qBAAWZ,EAAa,CACpDM,OAAQK,EAAmB,UAAY,KACvCP,KAAM,KACNC,MAAO,OAHT,mBAAOQ,EAAP,KAAkBC,EAAlB,KAMMC,EAAcC,sBAAW,uCAC7B,WAAgBC,GAAhB,eAAAC,EAAA,6DACEJ,EAAS,CAAEX,KAAM,SADnB,kBAG+BO,EAAgBO,GAH/C,OAGUV,EAHV,OAIIO,EAAS,CAAEX,KAAM,UAAWI,iBAJhC,gDAMIO,EAAS,CACPX,KAAM,QACNK,aAAc,KAAMW,SAAW,0BARrC,yDAD6B,sDAa7B,CAACT,IAGH,OAAO,aACLK,eACGF,ICvDDO,EAAkB,wDAEjB,SAAeC,IAAtB,+B,4CAAO,oCAAAH,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,iBADvB,cACCG,EADD,gBAEcA,EAASC,OAFvB,UAECpB,EAFD,OAIAmB,EAASE,GAJT,sBAKG,IAAIC,MAAMtB,EAAKe,SAAW,2BAL7B,OAUL,IAAWQ,KAFLC,EAAoB,GAERxB,EACVyB,EADgB,aAEpBxD,GAAIsD,GACDvB,EAAKuB,IAGVC,EAAkBrC,KAAKsC,GAhBpB,yBAmBED,GAnBF,6C,sBAsBA,SAAeE,EAAtB,kC,4CAAO,WAA8BC,GAA9B,mBAAAb,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,mBAA8BW,EAA9B,UADvB,cACCR,EADD,gBAEcA,EAASC,OAFvB,UAECpB,EAFD,OAIAmB,EAASE,GAJT,sBAKG,IAAIC,MAAMtB,EAAKe,SAAW,0BAL7B,cAQCa,EARD,aASH3D,GAAI0D,GACD3B,GAVA,kBAaE4B,GAbF,6C,sBAgBA,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,iBAAAhB,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,gBAAmC,CAC7De,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACP,eAAgB,sBALf,cACChB,EADD,gBAQcA,EAASC,OARvB,UAQCpB,EARD,OAUAmB,EAASE,GAVT,sBAWG,IAAIC,MAAMtB,EAAKe,SAAW,2BAX7B,gCAcE,MAdF,4C,sBAiBA,SAAeqB,EAAtB,kC,4CAAO,WAA0BvB,GAA1B,iBAAAC,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,qBAAgCH,EAAYc,QAA5C,SAA4D,CACtFI,OAAQ,OACRC,KAAMC,KAAKC,UAAUrB,EAAYwB,aACjCF,QAAS,CACP,eAAgB,sBALf,cACChB,EADD,gBAQcA,EAASC,OARvB,UAQCpB,EARD,OAUAmB,EAASE,GAVT,sBAWG,IAAIC,MAAMtB,EAAKe,SAAW,0BAX7B,gCAcE,CAAEuB,UAAWtC,EAAKuC,OAdpB,4C,sBAiBA,SAAeC,EAAtB,kC,4CAAO,WAA8Bb,GAA9B,uBAAAb,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,qBAAgCW,EAAhC,UADvB,cACCR,EADD,gBAGcA,EAASC,OAHvB,UAGCpB,EAHD,OAKAmB,EAASE,GALT,sBAMG,IAAIC,MAAMtB,EAAKe,SAAW,2BAN7B,OAWL,IAAWQ,KAFLkB,EAAsB,GAEVzC,EACV0C,EADgB,aAEpBzE,GAAIsD,GACDvB,EAAKuB,IAGVkB,EAAoBtD,KAAKuD,GAjBtB,yBAoBED,GApBF,6C,sBClEP,IA6BeE,EA7BG,WAChB,MAA2DtC,EACzDY,GACA,GAFMN,EAAR,EAAQA,YAAaT,EAArB,EAAqBA,OAAc0C,EAAnC,EAA6B5C,KAAoBC,EAAjD,EAAiDA,MASjD,OAJA4C,qBAAU,WACRlC,MACC,CAACA,IAEW,YAAXT,EAEA,qBAAKvC,UAAU,WAAf,SACE,cAAC,EAAD,MAKFsC,EACK,mBAAGtC,UAAU,mBAAb,SAAiCsC,IAG3B,cAAXC,GAA4B0C,GAAwC,IAAxBA,EAAaE,OAItD,cAAC,EAAD,CAAW3E,OAAQyE,IAHjB,cAAC,EAAD,K,iBCpBIG,EATU,SAACrF,GACxB,OACE,yBAAQC,UAAWC,IAAQ2B,MAA3B,UACE,4BAAI7B,EAAMI,OACV,qCAAaJ,EAAMK,a,kCC0CViF,EAzCQ,SAACtF,GACtB,IAAMuF,EAAiBC,mBAEvB,EAAuC7C,EAAQ+B,GAAvCzB,EAAR,EAAQA,YAAaT,EAArB,EAAqBA,OAAQD,EAA7B,EAA6BA,MAErBkD,EAAmBzF,EAAnByF,eAERN,qBAAU,WACO,cAAX3C,GAA2BD,GAC7BkD,MAED,CAACjD,EAAQD,EAAOkD,IAEnB,IAAMC,EAAoB,SAACC,GACzBA,EAAMC,iBAEN,IAAMC,EAAcN,EAAeO,QAAQC,MAI3C9C,EAAY,CAAE0B,YAAa,CAAEvE,KAAMyF,GAAe5B,QAASjE,EAAMiE,WAGnE,OACE,uBAAMhE,UAAWC,IAAQ8F,KAAMC,SAAUP,EAAzC,UACc,YAAXlD,GACC,qBAAKvC,UAAU,WAAf,SACE,cAAC,EAAD,MAGJ,sBAAKA,UAAWC,IAAQgG,QAASD,SAAUP,EAA3C,UACE,uBAAOS,QAAQ,UAAf,0BACA,0BAAU5F,GAAG,UAAU6F,KAAK,IAAIC,IAAKd,OAEvC,qBAAKtF,UAAWC,IAAQoG,QAAxB,SACE,wBAAQrG,UAAU,MAAlB,+B,iBChCOsG,EARK,SAACvG,GACnB,OACE,oBAAIC,UAAWC,IAAQC,KAAvB,SACE,4BAAIH,EAAMI,U,iBCQDoG,EAVM,SAACxG,GACpB,OACE,oBAAIC,UAAWC,IAAQuG,SAAvB,SACGzG,EAAMyG,SAAS7E,KAAI,SAAC8E,GAAD,OAClB,cAAC,EAAD,CAA8BtG,KAAMsG,EAAQtG,MAA1BsG,EAAQnG,UC+DnBoG,GA5DE,WACf,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAGQ7C,EAFO8C,cAEP9C,QAER,EAAsDtB,EAAQmC,GAAtD7B,EAAR,EAAQA,YAAaT,EAArB,EAAqBA,OAAcwE,EAAnC,EAA6B1E,KAE7B6C,qBAAU,WACRlC,EAAYgB,KACX,CAACA,EAAShB,IAEb,IAQIwD,EAJEQ,EAAsB/D,uBAAY,WACtCD,EAAYgB,KACX,CAAChB,EAAagB,IAuBjB,MAnBe,YAAXzB,IACFiE,EACE,qBAAKxG,UAAU,WAAf,SACE,cAAC,EAAD,OAKS,cAAXuC,GAA0BwE,GAAkBA,EAAe5B,OAAS,IACtEqB,EAAW,cAAC,EAAD,CAAcA,SAAUO,KAIxB,cAAXxE,GACEwE,GAA4C,IAA1BA,EAAe5B,SAEnCqB,EAAW,mBAAGxG,UAAU,WAAb,0CAIX,0BAASA,UAAWC,IAAQuG,SAA5B,UACE,gDACEI,GACA,wBAAQ5G,UAAU,MAAMuB,QAjCC,WAC7BsF,GAAmB,IAgCf,2BAIDD,GACC,cAAC,EAAD,CACE5C,QAASA,EACTwB,eAAgBwB,IAGnBR,MCRQS,GAhDK,WAClB,IAAMC,EAAQC,cAGNnD,EAFO8C,cAEP9C,QAER,EAA0DtB,EACxDqB,GACA,GAFMf,EAAR,EAAQA,YAAaT,EAArB,EAAqBA,OAAc0B,EAAnC,EAA6B5B,KAAmBC,EAAhD,EAAgDA,MAShD,OAJA4C,qBAAU,WACRlC,EAAYgB,KACX,CAAChB,EAAagB,IAEF,YAAXzB,EAEA,qBAAKvC,UAAU,WAAf,SACE,cAAC,EAAD,MAKFsC,EACK,mBAAGtC,UAAU,WAAb,SAAyBsC,IAG7B2B,EAAY9D,KAKf,eAAC,WAAD,WACE,cAAC,EAAD,CAAkBA,KAAM8D,EAAY9D,KAAMC,OAAQ6D,EAAY7D,SAC9D,cAAC,IAAD,CAAOgH,KAAMF,EAAME,KAAMC,OAAK,EAA9B,SACE,qBAAKrH,UAAU,WAAf,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYK,GAAE,UAAK6G,EAAMI,IAAX,aAA9B,+BAKJ,cAAC,IAAD,CAAOF,KAAI,UAAKF,EAAME,KAAX,aAAX,SACE,cAAC,GAAD,SAdG,iD,oBC/BIG,GAJF,SAACxH,GACZ,OAAO,qBAAKC,UAAWC,KAAQuH,KAAxB,SAA+BzH,EAAM0H,Y,oBCkE/BC,GA9DG,SAAC3H,GACjB,MAAoC4G,oBAAS,GAA7C,mBAAOgB,EAAP,KAAmBC,EAAnB,KAEMC,EAAiBtC,mBACjBuC,EAAevC,mBAqBrB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CACEwC,KAAMJ,EACNvE,QAAS,SAACxC,GAAD,MACP,yEAGJ,cAAC,GAAD,UACE,uBACEoH,QAdmB,WACzBJ,GAAc,IAcR5H,UAAWC,KAAQ8F,KACnBC,SA/BR,SAA2BN,GACzBA,EAAMC,iBAEN,IAAMsC,EAAgBJ,EAAehC,QAAQC,MACvCF,EAAckC,EAAajC,QAAQC,MAIzC/F,EAAMmI,WAAW,CAAE9H,OAAQ6H,EAAe9H,KAAMyF,KAoB5C,UAKG7F,EAAMoI,WACL,qBAAKnI,UAAWC,KAAQmI,QAAxB,SACE,cAAC,EAAD,MAIJ,sBAAKpI,UAAWC,KAAQgG,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAO9D,KAAK,OAAO9B,GAAG,SAAS8F,IAAKyB,OAEtC,sBAAK7H,UAAWC,KAAQgG,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAU5F,GAAG,OAAO6F,KAAK,IAAIC,IAAK0B,OAEpC,qBAAK9H,UAAWC,KAAQoG,QAAxB,SACE,wBAAQ9E,QArCY,WAC5BqG,GAAc,IAoCkC5H,UAAU,MAAlD,kCCrCGqI,GAjBE,WACf,MAAgC3F,EAAQwB,GAAhClB,EAAR,EAAQA,YAAaT,EAArB,EAAqBA,OACf7B,EAAUC,cAEhBuE,qBAAU,WACO,cAAX3C,GACF7B,EAAQc,KAAK,aAEd,CAACe,EAAQ7B,IAMZ,OAAO,cAAC,GAAD,CAAWyH,UAAsB,YAAX5F,EAAsB2F,WAJ3B,SAAC/D,GACvBnB,EAAYmB,OCVDmE,GARE,WACf,OACE,qBAAKtI,UAAU,WAAf,SACE,mD,wCCuBSuI,GAtBQ,WACrB,OACE,yBAAQvI,UAAWC,KAAQuI,OAA3B,UACE,qBAAKxI,UAAWC,KAAQwI,KAAxB,0BACA,qBAAKzI,UAAWC,KAAQyI,IAAxB,SACE,+BACE,6BACE,cAAC,IAAD,CAASrI,GAAG,UAAUsI,gBAAiB1I,KAAQ2I,OAA/C,0BAIF,6BACE,cAAC,IAAD,CAASvI,GAAG,aAAasI,gBAAiB1I,KAAQ2I,OAAlD,oCCFGC,GATA,SAAC9I,GACd,OACE,eAAC,WAAD,WACE,cAAC,GAAD,IACA,sBAAMC,UAAWC,KAAQ6I,KAAzB,SAAgC/I,EAAM0H,eCuB7BsB,OAxBf,WACE,OACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO3B,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,IAAD,CAAUhH,GAAG,cAEf,cAAC,IAAD,CAAO+G,KAAK,UAAUC,OAAK,EAA3B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,mBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,YCnBV4B,IAASC,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1be32df3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1hH7z\",\"loading\":\"QuoteForm_loading__2vT0r\",\"control\":\"QuoteForm_control__lpw1d\",\"actions\":\"QuoteForm_actions__3Fehv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2NMEz\",\"logo\":\"MainNavigation_logo__2EFrk\",\"nav\":\"MainNavigation_nav__zn0Cy\",\"active\":\"MainNavigation_active__JgdOc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__37zAq\",\"loading\":\"NewCommentForm_loading__2QQq2\",\"control\":\"NewCommentForm_control__1mPff\",\"actions\":\"NewCommentForm_actions__2WAvt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__H99wv\",\"sorting\":\"QuoteList_sorting__2kHBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__E9DiZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__-QxYr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__22TEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1W8Ju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3Oahe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2Da6X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__29Yjb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__Igc26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__27rhT\"};","import { Link } from 'react-router-dom';\n\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link } from 'react-router-dom';\n\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://great-quote-ae775-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { useEffect } from 'react';\n\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\n\nconst AllQuotes = () => {\n  const { sendRequest, status, data: loadedQuotes, error } = useHttp(\n    getAllQuotes,\n    true\n  );\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className='centered focused'>{error}</p>;\n  }\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment, useEffect } from 'react';\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\n\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport Comments from '../components/comments/Comments';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(\n    getSingleQuote,\n    true\n  );\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className='centered'>{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No quote found!</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={match.path} exact>\n        <div className='centered'>\n          <Link className='btn--flat' to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          'Are you sure you want to leave? All your entered data will be lost!'\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport QuoteForm from '../components/quotes/QuoteForm';\nimport useHttp from '../hooks/use-http';\nimport { addQuote } from '../lib/api';\n\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === 'completed') {\n      history.push('/quotes');\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n\n  return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />;\n};\n\nexport default NewQuote;\n","const NotFound = () => {\n  return (\n    <div className='centered'>\n      <p>Page not found!</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { NavLink } from 'react-router-dom';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to='/quotes' activeClassName={classes.active}>\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to='/new-quote' activeClassName={classes.active}>\n              Add a Quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport classes from './Layout.module.css';\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { Route, Switch, Redirect } from 'react-router-dom';\n\nimport AllQuotes from './pages/AllQuotes';\nimport QuoteDetail from './pages/QuoteDetail';\nimport NewQuote from './pages/NewQuote';\nimport NotFound from './pages/NotFound';\nimport Layout from './components/layout/Layout';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <Redirect to='/quotes' />\n        </Route>\n        <Route path='/quotes' exact>\n          <AllQuotes />\n        </Route>\n        <Route path='/quotes/:quoteId'>\n          <QuoteDetail />\n        </Route>\n        <Route path='/new-quote'>\n          <NewQuote />\n        </Route>\n        <Route path='*'>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}